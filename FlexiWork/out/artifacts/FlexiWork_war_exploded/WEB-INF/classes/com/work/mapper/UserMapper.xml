<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--UserMapper.xml 文件是 MyBatis 框架中用于操作用户信息的映射文件，定义了如何通过 SQL 语句与 Java 对象进行交互。
该文件实现了用户信息的完整 CRUD（创建、读取、更新、删除）功能，并支持条件查询和动态过滤。-->

<mapper namespace="com.work.mapper.UserMapper">

	<!-- 定义结果映射，将数据库表字段映射到 Java 对象属性 -->
	<resultMap type="com.work.pojo.User" id="BaseResultMap">
		<id column="user_id" property="userId" jdbcType="INTEGER" /> <!-- 用户ID -->
		<result column="real_name" property="realName" jdbcType="VARCHAR" /> <!-- 真实姓名 -->
		<result column="nick_name" property="nickName" jdbcType="VARCHAR" /> <!-- 昵称 -->
		<result column="sex" property="sex" jdbcType="INTEGER" /> <!-- 性别 -->
		<result column="phone" property="phone" jdbcType="VARCHAR" /> <!-- 电话号码 -->
		<result column="birthday" property="pirthday" jdbcType="VARCHAR" /> <!-- 出生日期 -->
		<result column="email" property="email" jdbcType="VARCHAR" /> <!-- 电子邮件 -->
		<result column="header_image" property="headerImage" jdbcType="VARCHAR" /> <!-- 头像图片 -->
		<result column="question" property="question" jdbcType="VARCHAR" /> <!-- 安全问题 -->
		<result column="answer" property="answer" jdbcType="VARCHAR" /> <!-- 安全答案 -->
		<result column="user_category" property="userCategory" jdbcType="VARCHAR" /> <!-- 用户分类 -->
		<result column="user_leven" property="userLeven" jdbcType="INTEGER" /> <!-- 用户等级 -->
		<result column="password" property="password" jdbcType="VARCHAR" /> <!-- 密码 -->
		<result column="is_effect" property="isEffect" jdbcType="INTEGER" /> <!-- 是否有效 -->
		<result column="is_work" property="isWork" jdbcType="INTEGER" /> <!-- 是否在职 -->
		<result column="remark" property="remark" jdbcType="INTEGER" /> <!-- 备注 -->
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" /> <!-- 创建时间 -->
	</resultMap>

	<!-- 查询用户列表，支持条件过滤和分页 -->
	<select id="getUserList" resultMap="BaseResultMap">
		select * from user where 1=1
		<if test="user.userId != null">
			and user_id like CONCAT('%',#{user.userId},'%') <!-- 根据用户ID过滤 -->
		</if>
		<if test="user.phone !=null and user.phone!=''">
			and phone like CONCAT('%',#{user.phone},'%') <!-- 根据手机号过滤 -->
		</if>
		<if test="user.userLeven !=null">
			and user_leven like CONCAT('%',#{user.userLeven},'%') <!-- 根据用户等级过滤 -->
		</if>
		<if test="user.isEffect !=null">
			and is_effect like CONCAT('%',#{user.isEffect},'%') <!-- 根据有效状态过滤 -->
		</if>
		<if test="user.userCategory !=null and user.userCategory!=''">
			and user_category like CONCAT('%',#{user.userCategory},'%') <!-- 根据用户分类过滤 -->
		</if>
		order by create_time desc <!-- 按创建时间降序排列 -->
		<if test="page != null and limit != null">
			limit #{page},#{limit} <!-- 分页支持 -->
		</if>
	</select>

	<!-- 查询用户总数 -->
	<select id="getUserListCount" resultType="Integer" parameterType="com.work.pojo.User">
		select count(*) from user where 1=1
		<if test="user.userId != null">
			and user_id like CONCAT('%',#{user.userId},'%') <!-- 根据用户ID过滤 -->
		</if>
		<if test="user.phone !=null and user.phone!=''">
			and phone like CONCAT('%',#{user.phone},'%') <!-- 根据手机号过滤 -->
		</if>
		<if test="user.userLeven !=null">
			and user_leven like CONCAT('%',#{user.userLeven},'%') <!-- 根据用户等级过滤 -->
		</if>
		<if test="user.isEffect !=null">
			and is_effect like CONCAT('%',#{user.isEffect},'%') <!-- 根据有效状态过滤 -->
		</if>
		<if test="user.userCategory !=null and user.userCategory!=''">
			and user_category like CONCAT('%',#{user.userCategory},'%') <!-- 根据用户分类过滤 -->
		</if>
	</select>

	<!-- 添加新用户 -->
	<insert id="addUser" useGeneratedKeys="true" keyProperty="user.userId" parameterType="com.work.pojo.User">
		insert into
			user(real_name, nick_name, email, password, sex, phone, pirthday,
				 header_image, question, answer, user_category, user_leven,
				 is_effect, is_work, remark, create_time)
		values(#{user.realName}, #{user.nickName}, #{user.email}, #{user.password},
			   #{user.sex}, #{user.phone}, #{user.pirthday},
			   #{user.headerImage}, #{user.question}, #{user.answer}, #{user.userCategory},
			   #{user.userLeven}, #{user.isEffect}, #{user.isWork}, #{user.remark}, #{user.createTime})
	</insert>

	<!-- 更新用户信息 -->
	<update id="updateUser" parameterType="com.work.pojo.User">
		update user
		<trim prefix="set" suffixOverrides=",">
			<if test="user.nickName != null and user.nickName != ''">nick_name = #{user.nickName},</if> <!-- 更新昵称 -->
			<if test="user.realName != null and user.realName != ''">real_name = #{user.realName},</if> <!-- 更新真实姓名 -->
			<if test="user.password != null and user.password != ''">password = #{user.password},</if> <!-- 更新密码 -->
			<if test="user.email != null and user.email != ''">email = #{user.email},</if> <!-- 更新电子邮件 -->
			<if test="user.sex != null">sex = #{user.sex},</if> <!-- 更新性别 -->
			<if test="user.phone != null and user.phone != ''">phone = #{user.phone},</if> <!-- 更新手机号 -->
			<if test="user.pirthday != null">pirthday = #{user.pirthday},</if> <!-- 更新出生日期 -->
			<if test="user.headerImage != null and user.headerImage != ''">header_image = #{user.headerImage},</if> <!-- 更新头像 -->
			<if test="user.question != null and user.question != ''">question = #{user.question},</if> <!-- 更新安全问题 -->
			<if test="user.answer != null and user.answer != ''">answer = #{user.answer},</if> <!-- 更新安全答案 -->
			<if test="user.userCategory != null and user.userCategory != ''">user_category = #{user.userCategory},</if> <!-- 更新用户分类 -->
			<if test="user.userLeven != null">user_leven = #{user.userLeven},</if> <!-- 更新用户等级 -->
			<if test="user.isEffect != null">is_effect = #{user.isEffect},</if> <!-- 更新有效状态 -->
			<if test="user.isWork != null">is_work = #{user.isWork},</if> <!-- 更新在职状态 -->
			<if test="user.remark != null and user.remark !=''">remark = #{user.remark},</if> <!-- 更新备注 -->
		</trim>
		where user_id = #{user.userId} <!-- 根据用户ID进行更新 -->
	</update>

	<!-- 根据用户ID获取用户信息 -->
	<select id="getUserById" resultMap="BaseResultMap">
		select * from user where user_id = #{userId} <!-- 根据ID获取用户信息 -->
	</select>

	<!-- 根据条件查询用户 -->
	<select id="getUser" resultMap="BaseResultMap">
		select * from user where 1=1
		<if test="user.userId != null">
			and user_id like CONCAT('%',#{user.userId},'%') <!-- 根据用户ID过滤 -->
		</if>
		<if test="user.phone !=null and user.phone!=''">
			and phone like CONCAT('%',#{user.phone},'%') <!-- 根据手机号过滤 -->
		</if>
		<if test="user.nickName !=null and user.nickName!=''">
			and nick_name like CONCAT('%',#{user.nickName},'%') <!-- 根据昵称过滤 -->
		</if>
		<if test="user.password !=null and user.password!=''">
			and password like CONCAT('%',#{user.password},'%') <!-- 根据密码过滤 -->
		</if>
		<if test="user.userLeven !=null">
			and user_leven like CONCAT('%',#{user.userLeven},'%') <!-- 根据用户等级过滤 -->
		</if>
		<if test="user.isEffect !=null">
			and is_effect like CONCAT('%',#{user.isEffect},'%') <!-- 根据有效状态过滤 -->
		</if>
		<if test="user.userCategory !=null and user.userCategory!=''">
			and user_category like CONCAT('%',#{user.userCategory},'%') <!-- 根据用户分类过滤 -->
		</if>
	</select>

	<!-- 根据用户昵称查询用户 -->
	<select id="getUserByNickName" resultMap="BaseResultMap">
		select * from user where nick_name like #{user.nickName} <!-- 根据昵称获取用户信息 -->
	</select>
</mapper>
